// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tick.proto

package com.slack.openalgot;

public final class MarketEventProtos {
  private MarketEventProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TickOrBuilder extends
      // @@protoc_insertion_point(interface_extends:go.srv.TickRecorder.Tick)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>optional double bid = 2;</code>
     */
    double getBid();

    /**
     * <code>optional double ask = 3;</code>
     */
    double getAsk();

    /**
     * <code>optional double last = 4;</code>
     */
    double getLast();

    /**
     * <code>optional string pair = 5;</code>
     */
    java.lang.String getPair();
    /**
     * <code>optional string pair = 5;</code>
     */
    com.google.protobuf.ByteString
        getPairBytes();

    /**
     * <code>optional string broker = 6;</code>
     */
    java.lang.String getBroker();
    /**
     * <code>optional string broker = 6;</code>
     */
    com.google.protobuf.ByteString
        getBrokerBytes();
  }
  /**
   * Protobuf type {@code go.srv.TickRecorder.Tick}
   */
  public  static final class Tick extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:go.srv.TickRecorder.Tick)
      TickOrBuilder {
    // Use Tick.newBuilder() to construct.
    private Tick(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Tick() {
      time_ = 0L;
      bid_ = 0D;
      ask_ = 0D;
      last_ = 0D;
      pair_ = "";
      broker_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Tick(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              time_ = input.readInt64();
              break;
            }
            case 17: {

              bid_ = input.readDouble();
              break;
            }
            case 25: {

              ask_ = input.readDouble();
              break;
            }
            case 33: {

              last_ = input.readDouble();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              pair_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              broker_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Tick_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Tick_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.slack.openalgot.MarketEventProtos.Tick.class, com.slack.openalgot.MarketEventProtos.Tick.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>optional int64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int BID_FIELD_NUMBER = 2;
    private double bid_;
    /**
     * <code>optional double bid = 2;</code>
     */
    public double getBid() {
      return bid_;
    }

    public static final int ASK_FIELD_NUMBER = 3;
    private double ask_;
    /**
     * <code>optional double ask = 3;</code>
     */
    public double getAsk() {
      return ask_;
    }

    public static final int LAST_FIELD_NUMBER = 4;
    private double last_;
    /**
     * <code>optional double last = 4;</code>
     */
    public double getLast() {
      return last_;
    }

    public static final int PAIR_FIELD_NUMBER = 5;
    private volatile java.lang.Object pair_;
    /**
     * <code>optional string pair = 5;</code>
     */
    public java.lang.String getPair() {
      java.lang.Object ref = pair_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pair_ = s;
        return s;
      }
    }
    /**
     * <code>optional string pair = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPairBytes() {
      java.lang.Object ref = pair_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pair_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BROKER_FIELD_NUMBER = 6;
    private volatile java.lang.Object broker_;
    /**
     * <code>optional string broker = 6;</code>
     */
    public java.lang.String getBroker() {
      java.lang.Object ref = broker_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        broker_ = s;
        return s;
      }
    }
    /**
     * <code>optional string broker = 6;</code>
     */
    public com.google.protobuf.ByteString
        getBrokerBytes() {
      java.lang.Object ref = broker_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        broker_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0L) {
        output.writeInt64(1, time_);
      }
      if (bid_ != 0D) {
        output.writeDouble(2, bid_);
      }
      if (ask_ != 0D) {
        output.writeDouble(3, ask_);
      }
      if (last_ != 0D) {
        output.writeDouble(4, last_);
      }
      if (!getPairBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, pair_);
      }
      if (!getBrokerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, broker_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, time_);
      }
      if (bid_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, bid_);
      }
      if (ask_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, ask_);
      }
      if (last_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, last_);
      }
      if (!getPairBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, pair_);
      }
      if (!getBrokerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, broker_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.slack.openalgot.MarketEventProtos.Tick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slack.openalgot.MarketEventProtos.Tick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slack.openalgot.MarketEventProtos.Tick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slack.openalgot.MarketEventProtos.Tick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slack.openalgot.MarketEventProtos.Tick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.slack.openalgot.MarketEventProtos.Tick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.slack.openalgot.MarketEventProtos.Tick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.slack.openalgot.MarketEventProtos.Tick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.slack.openalgot.MarketEventProtos.Tick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.slack.openalgot.MarketEventProtos.Tick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.slack.openalgot.MarketEventProtos.Tick prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code go.srv.TickRecorder.Tick}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:go.srv.TickRecorder.Tick)
        com.slack.openalgot.MarketEventProtos.TickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Tick_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Tick_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.slack.openalgot.MarketEventProtos.Tick.class, com.slack.openalgot.MarketEventProtos.Tick.Builder.class);
      }

      // Construct using com.slack.openalgot.MarketEventProtos.Tick.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = 0L;

        bid_ = 0D;

        ask_ = 0D;

        last_ = 0D;

        pair_ = "";

        broker_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Tick_descriptor;
      }

      public com.slack.openalgot.MarketEventProtos.Tick getDefaultInstanceForType() {
        return com.slack.openalgot.MarketEventProtos.Tick.getDefaultInstance();
      }

      public com.slack.openalgot.MarketEventProtos.Tick build() {
        com.slack.openalgot.MarketEventProtos.Tick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slack.openalgot.MarketEventProtos.Tick buildPartial() {
        com.slack.openalgot.MarketEventProtos.Tick result = new com.slack.openalgot.MarketEventProtos.Tick(this);
        result.time_ = time_;
        result.bid_ = bid_;
        result.ask_ = ask_;
        result.last_ = last_;
        result.pair_ = pair_;
        result.broker_ = broker_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.slack.openalgot.MarketEventProtos.Tick) {
          return mergeFrom((com.slack.openalgot.MarketEventProtos.Tick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.slack.openalgot.MarketEventProtos.Tick other) {
        if (other == com.slack.openalgot.MarketEventProtos.Tick.getDefaultInstance()) return this;
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getBid() != 0D) {
          setBid(other.getBid());
        }
        if (other.getAsk() != 0D) {
          setAsk(other.getAsk());
        }
        if (other.getLast() != 0D) {
          setLast(other.getLast());
        }
        if (!other.getPair().isEmpty()) {
          pair_ = other.pair_;
          onChanged();
        }
        if (!other.getBroker().isEmpty()) {
          broker_ = other.broker_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slack.openalgot.MarketEventProtos.Tick parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slack.openalgot.MarketEventProtos.Tick) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long time_ ;
      /**
       * <code>optional int64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional int64 time = 1;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private double bid_ ;
      /**
       * <code>optional double bid = 2;</code>
       */
      public double getBid() {
        return bid_;
      }
      /**
       * <code>optional double bid = 2;</code>
       */
      public Builder setBid(double value) {
        
        bid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double bid = 2;</code>
       */
      public Builder clearBid() {
        
        bid_ = 0D;
        onChanged();
        return this;
      }

      private double ask_ ;
      /**
       * <code>optional double ask = 3;</code>
       */
      public double getAsk() {
        return ask_;
      }
      /**
       * <code>optional double ask = 3;</code>
       */
      public Builder setAsk(double value) {
        
        ask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double ask = 3;</code>
       */
      public Builder clearAsk() {
        
        ask_ = 0D;
        onChanged();
        return this;
      }

      private double last_ ;
      /**
       * <code>optional double last = 4;</code>
       */
      public double getLast() {
        return last_;
      }
      /**
       * <code>optional double last = 4;</code>
       */
      public Builder setLast(double value) {
        
        last_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double last = 4;</code>
       */
      public Builder clearLast() {
        
        last_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object pair_ = "";
      /**
       * <code>optional string pair = 5;</code>
       */
      public java.lang.String getPair() {
        java.lang.Object ref = pair_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pair_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pair = 5;</code>
       */
      public com.google.protobuf.ByteString
          getPairBytes() {
        java.lang.Object ref = pair_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pair_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pair = 5;</code>
       */
      public Builder setPair(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pair_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pair = 5;</code>
       */
      public Builder clearPair() {
        
        pair_ = getDefaultInstance().getPair();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pair = 5;</code>
       */
      public Builder setPairBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pair_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object broker_ = "";
      /**
       * <code>optional string broker = 6;</code>
       */
      public java.lang.String getBroker() {
        java.lang.Object ref = broker_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          broker_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string broker = 6;</code>
       */
      public com.google.protobuf.ByteString
          getBrokerBytes() {
        java.lang.Object ref = broker_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          broker_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string broker = 6;</code>
       */
      public Builder setBroker(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        broker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string broker = 6;</code>
       */
      public Builder clearBroker() {
        
        broker_ = getDefaultInstance().getBroker();
        onChanged();
        return this;
      }
      /**
       * <code>optional string broker = 6;</code>
       */
      public Builder setBrokerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        broker_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:go.srv.TickRecorder.Tick)
    }

    // @@protoc_insertion_point(class_scope:go.srv.TickRecorder.Tick)
    private static final com.slack.openalgot.MarketEventProtos.Tick DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.slack.openalgot.MarketEventProtos.Tick();
    }

    public static com.slack.openalgot.MarketEventProtos.Tick getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Tick>
        PARSER = new com.google.protobuf.AbstractParser<Tick>() {
      public Tick parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Tick(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Tick> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Tick> getParserForType() {
      return PARSER;
    }

    public com.slack.openalgot.MarketEventProtos.Tick getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TradeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:go.srv.TickRecorder.Trade)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>optional double price = 2;</code>
     */
    double getPrice();

    /**
     * <code>optional double amount = 3;</code>
     */
    double getAmount();

    /**
     * <code>optional int32 type = 4;</code>
     */
    int getType();
  }
  /**
   * Protobuf type {@code go.srv.TickRecorder.Trade}
   */
  public  static final class Trade extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:go.srv.TickRecorder.Trade)
      TradeOrBuilder {
    // Use Trade.newBuilder() to construct.
    private Trade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Trade() {
      time_ = 0L;
      price_ = 0D;
      amount_ = 0D;
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Trade(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              time_ = input.readInt64();
              break;
            }
            case 17: {

              price_ = input.readDouble();
              break;
            }
            case 25: {

              amount_ = input.readDouble();
              break;
            }
            case 32: {

              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Trade_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Trade_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.slack.openalgot.MarketEventProtos.Trade.class, com.slack.openalgot.MarketEventProtos.Trade.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>optional int64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int PRICE_FIELD_NUMBER = 2;
    private double price_;
    /**
     * <code>optional double price = 2;</code>
     */
    public double getPrice() {
      return price_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private double amount_;
    /**
     * <code>optional double amount = 3;</code>
     */
    public double getAmount() {
      return amount_;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <code>optional int32 type = 4;</code>
     */
    public int getType() {
      return type_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0L) {
        output.writeInt64(1, time_);
      }
      if (price_ != 0D) {
        output.writeDouble(2, price_);
      }
      if (amount_ != 0D) {
        output.writeDouble(3, amount_);
      }
      if (type_ != 0) {
        output.writeInt32(4, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, time_);
      }
      if (price_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, price_);
      }
      if (amount_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, amount_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, type_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.slack.openalgot.MarketEventProtos.Trade parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slack.openalgot.MarketEventProtos.Trade parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slack.openalgot.MarketEventProtos.Trade parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slack.openalgot.MarketEventProtos.Trade parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slack.openalgot.MarketEventProtos.Trade parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.slack.openalgot.MarketEventProtos.Trade parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.slack.openalgot.MarketEventProtos.Trade parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.slack.openalgot.MarketEventProtos.Trade parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.slack.openalgot.MarketEventProtos.Trade parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.slack.openalgot.MarketEventProtos.Trade parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.slack.openalgot.MarketEventProtos.Trade prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code go.srv.TickRecorder.Trade}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:go.srv.TickRecorder.Trade)
        com.slack.openalgot.MarketEventProtos.TradeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Trade_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Trade_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.slack.openalgot.MarketEventProtos.Trade.class, com.slack.openalgot.MarketEventProtos.Trade.Builder.class);
      }

      // Construct using com.slack.openalgot.MarketEventProtos.Trade.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = 0L;

        price_ = 0D;

        amount_ = 0D;

        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.slack.openalgot.MarketEventProtos.internal_static_go_srv_TickRecorder_Trade_descriptor;
      }

      public com.slack.openalgot.MarketEventProtos.Trade getDefaultInstanceForType() {
        return com.slack.openalgot.MarketEventProtos.Trade.getDefaultInstance();
      }

      public com.slack.openalgot.MarketEventProtos.Trade build() {
        com.slack.openalgot.MarketEventProtos.Trade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slack.openalgot.MarketEventProtos.Trade buildPartial() {
        com.slack.openalgot.MarketEventProtos.Trade result = new com.slack.openalgot.MarketEventProtos.Trade(this);
        result.time_ = time_;
        result.price_ = price_;
        result.amount_ = amount_;
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.slack.openalgot.MarketEventProtos.Trade) {
          return mergeFrom((com.slack.openalgot.MarketEventProtos.Trade)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.slack.openalgot.MarketEventProtos.Trade other) {
        if (other == com.slack.openalgot.MarketEventProtos.Trade.getDefaultInstance()) return this;
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getPrice() != 0D) {
          setPrice(other.getPrice());
        }
        if (other.getAmount() != 0D) {
          setAmount(other.getAmount());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slack.openalgot.MarketEventProtos.Trade parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slack.openalgot.MarketEventProtos.Trade) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long time_ ;
      /**
       * <code>optional int64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional int64 time = 1;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private double price_ ;
      /**
       * <code>optional double price = 2;</code>
       */
      public double getPrice() {
        return price_;
      }
      /**
       * <code>optional double price = 2;</code>
       */
      public Builder setPrice(double value) {
        
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double price = 2;</code>
       */
      public Builder clearPrice() {
        
        price_ = 0D;
        onChanged();
        return this;
      }

      private double amount_ ;
      /**
       * <code>optional double amount = 3;</code>
       */
      public double getAmount() {
        return amount_;
      }
      /**
       * <code>optional double amount = 3;</code>
       */
      public Builder setAmount(double value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double amount = 3;</code>
       */
      public Builder clearAmount() {
        
        amount_ = 0D;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>optional int32 type = 4;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 4;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 4;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:go.srv.TickRecorder.Trade)
    }

    // @@protoc_insertion_point(class_scope:go.srv.TickRecorder.Trade)
    private static final com.slack.openalgot.MarketEventProtos.Trade DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.slack.openalgot.MarketEventProtos.Trade();
    }

    public static com.slack.openalgot.MarketEventProtos.Trade getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Trade>
        PARSER = new com.google.protobuf.AbstractParser<Trade>() {
      public Trade parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Trade(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Trade> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Trade> getParserForType() {
      return PARSER;
    }

    public com.slack.openalgot.MarketEventProtos.Trade getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_go_srv_TickRecorder_Tick_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_go_srv_TickRecorder_Tick_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_go_srv_TickRecorder_Trade_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_go_srv_TickRecorder_Trade_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntick.proto\022\023go.srv.TickRecorder\"Z\n\004Tic" +
      "k\022\014\n\004time\030\001 \001(\003\022\013\n\003bid\030\002 \001(\001\022\013\n\003ask\030\003 \001(" +
      "\001\022\014\n\004last\030\004 \001(\001\022\014\n\004pair\030\005 \001(\t\022\016\n\006broker\030" +
      "\006 \001(\t\"B\n\005Trade\022\014\n\004time\030\001 \001(\003\022\r\n\005price\030\002 " +
      "\001(\001\022\016\n\006amount\030\003 \001(\001\022\014\n\004type\030\004 \001(\005B(\n\023com" +
      ".slack.openalgotB\021MarketEventProtosb\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_go_srv_TickRecorder_Tick_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_go_srv_TickRecorder_Tick_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_go_srv_TickRecorder_Tick_descriptor,
        new java.lang.String[] { "Time", "Bid", "Ask", "Last", "Pair", "Broker", });
    internal_static_go_srv_TickRecorder_Trade_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_go_srv_TickRecorder_Trade_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_go_srv_TickRecorder_Trade_descriptor,
        new java.lang.String[] { "Time", "Price", "Amount", "Type", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
